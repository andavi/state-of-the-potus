<!-- <div class="barChartsContainer"> -->
  <div class="pieContainer">
    <canvas id="sentimentPie"></canvas>
  </div>
  <div class="lineContainer">
    <canvas id="sentimentLine"></canvas>
  </div>
<!-- </div> -->


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.min.js"></script>
<script>
  window.onload = function () {
    // This creates normal js object to work wth
    const tweets = <%- JSON.stringify(tweets) %>;
    const sentimentColor = <%- JSON.stringify(sentimentColor) %>;

    // Pie Chart
    const positive = tweets.map(t => t.sentiment).reduce((a, p) => a + (p > 0.5 ? 1 : 0), 0);
    const negative = tweets.length - positive;

    var pieCtx = document.getElementById("sentimentPie");
    var myChart = new Chart(pieCtx, {
      type: 'pie',
      data: {
        labels: ["Positive", "Negative"],
        datasets: [{
          label: 'Positive vs. Negative',
          data: [positive, negative],
          backgroundColor: [
            'blue',
            'red',
          ],
          borderColor: [
            'blue',
            'red'
          ],
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          yAxes: [{
            ticks: {
              beginAtZero: true
            }
          }]
        }
      }
    });


    // Line Chart
    var lineCtx = document.getElementById("sentimentLine").getContext("2d");
    var gradientStroke = lineCtx.createLinearGradient(0, 500, 0, 0);
    gradientStroke.addColorStop(0, "red");
    gradientStroke.addColorStop(1, "blue");
    var chart = new Chart(lineCtx, {
      // The type of chart we want to create
      type: 'line',
      // The data for our dataset
      data: {
        labels: tweets.map(t => new Date(t.created_at)),
        datasets: [{
          label: "Sentiment",
          // backgroundColor: sentimentColor[1],

          borderColor: sentimentColor[0],
          fill: false,
          // borderColor: gradientStroke,
          // pointBorderColor: gradientStroke,
          // pointBackgroundColor: gradientStroke,
          // pointHoverBackgroundColor: gradientStroke,
          // pointHoverBorderColor: gradientStroke,

          data: tweets.map(t => t.sentiment),
          // borderWidth: 1,
          showLine: false,
          pointRadius: 2
        }],
      },
      // Configuration options go here
      options: {
        animation: {
            duration: 0, // general animation time
        },
        hover: {
            animationDuration: 0, // duration of animations when hovering an item
        },
        responsiveAnimationDuration: 0, // animation duration after a resize
        elements: {
            line: {
                tension: 0, // disables bezier curves
            }
        },
        legend: {
          display: false,
          labels: {
            boxWidth: 15
          }
        },
        title: {
          display: true,
          text: 'Tweet Sentiment Over Time',
          fontSize: 16,
        },
        scales: {
          xAxes: [{
            type: 'time',
          }]
        }
      }
    });

  };

</script>